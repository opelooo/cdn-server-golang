worker_processes 1;
events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;
  client_max_body_size 100M;

  # Define a shared memory zone called 'ratelimit' with 100MB, maksimal 5 request per detik per IP
  limit_req_zone $binary_remote_addr zone=ratelimit:100m rate=5r/s;


  server {
    listen 80;

    # Serve uploaded files and text
    # Reverse proxy to delete file or text
    location /cdn/ {
      proxy_pass http://upload:5000/cdn/;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      # expires 7d;
    }

    # Serve text files
    location /cdn-texts/ {
      proxy_pass http://upload:5000/cdn-texts/;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      # expires 7d;
    }

    # Serve uploader UI
    location / {
      root /upload-ui;
      index index.html;
    }

    # Reverse proxy to upload API
    location /upload {
      proxy_pass http://upload:5000/upload;
      limit_req zone=ratelimit burst=10 nodelay;
    }

    # Reverse proxy to save text
    location /text {
      proxy_pass http://upload:5000/text;
      limit_req zone=ratelimit burst=10 nodelay;
    }

    # Reverse proxy to get list of files
    location /files {
      proxy_pass http://upload:5000/files;
      access_log off;
    }

    # Reverse proxy to get list of text files
    location /texts {
      proxy_pass http://upload:5000/texts;
      access_log off;
    }
  }
}
